version: '3'

services:

  caddy:
    image: olsh4u/micro-caddy:1.0.7
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  front-end-service:
    image: olsh4u/front-end-service:1.0.11
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "http://backend"

  broker-service:
    image: olsh4u/broker-service:1.0.2
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    image: olsh4u/listener-service:1.0.2
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    image: olsh4u/auth-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    image: olsh4u/logger-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    image: olsh4u/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_FROM_NAME: "olsh4u"
      MAIL_FROM_ADDRESS: "olsh4u@example.com"

  rabbitmq:
    image: bitnami/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_MANAGEMENT_ALLOW_WEB_ACCESS: 'true'
    deploy:
      mode: global

  mailhog:
    image: jcalonso/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    deploy:
      mode: global

  mongo:
    image: mongo:4.2.17-bionic
    ports:
      - "27017:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./commons/db-data/mongo/:/data/db

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./commons/db-data/postgres/:/var/lib/postgresql/data

volumes:
  caddy_data:
    external: true
  caddy_config:
